{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { getPokemons } from \"../../core/repositories/pokemons.repository\";\n\nconst useAsyncHook = search => {\n  _s();\n\n  let [pokemons, setPokemons] = useState([]);\n  let [loading, setLoading] = useState(true);\n  let [error, setError] = useState(\"\");\n  React.useEffect(() => {\n    async function fetchPokemons() {\n      try {\n        setLoading(true);\n        throw new Error(\"hola ocu\");\n        const response = await getPokemons();\n        setPokemons(response);\n      } catch (error) {\n        setError(\"Ocurrio un error mientrase se obtenian los pokemones\");\n      }\n\n      setLoading(false);\n    }\n\n    fetchPokemons();\n  }, [search]);\n  return [pokemons, error, loading];\n};\n\n_s(useAsyncHook, \"uHGGDEgXio1gfJWnFXBXT5TwFnw=\");\n\nexport default useAsyncHook;","map":{"version":3,"sources":["C:/Users/DCVA9/Desktop/pokemon/client/src/core/hooks/hooks.js"],"names":["React","useState","getPokemons","useAsyncHook","search","pokemons","setPokemons","loading","setLoading","error","setError","useEffect","fetchPokemons","Error","response"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,6CAA5B;;AAEA,MAAMC,YAAY,GAAIC,MAAD,IAAY;AAAA;;AAC/B,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,mBAAeC,aAAf,GAA+B;AAC7B,UAAI;AACFJ,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAM,IAAIK,KAAJ,CAAU,UAAV,CAAN;AACA,cAAMC,QAAQ,GAAG,MAAMZ,WAAW,EAAlC;AACAI,QAAAA,WAAW,CAACQ,QAAD,CAAX;AACD,OALD,CAKE,OAAOL,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAAC,sDAAD,CAAR;AACD;;AACDF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDI,IAAAA,aAAa;AACd,GAbD,EAaG,CAACR,MAAD,CAbH;AAcA,SAAO,CAACC,QAAD,EAAWI,KAAX,EAAkBF,OAAlB,CAAP;AACD,CApBD;;GAAMJ,Y;;AAsBN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { getPokemons } from \"../../core/repositories/pokemons.repository\";\r\n\r\nconst useAsyncHook = (search) => {\r\n  let [pokemons, setPokemons] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n  let [error, setError] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    async function fetchPokemons() {\r\n      try {\r\n        setLoading(true);\r\n        throw new Error(\"hola ocu\");\r\n        const response = await getPokemons();\r\n        setPokemons(response);\r\n      } catch (error) {\r\n        setError(\"Ocurrio un error mientrase se obtenian los pokemones\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchPokemons();\r\n  }, [search]);\r\n  return [pokemons, error, loading];\r\n};\r\n\r\nexport default useAsyncHook;\r\n"]},"metadata":{},"sourceType":"module"}